body {
    font-size: 18px; /*размер шрифта. единицы измерения могут быть абсолютными или относительными.
    Самая часто используемая единица измерения размера шрифта — пиксели px
    есть специальная единица измерения — em. Величина 1em — это такой же размер шрифта, что и у родителя. 
    если нужно, чтобы шрифт дочернего элемента был всегда в 2 раза больше родительского - 2em */
    font-weight: 400; /*задаёт насыщенность или толщину шрифта.
    В качестве значения можно использовать ключевое слово или число. Самые часто встречающиеся значения:
    400 или normal — обычный шрифт, значение по умолчанию;
    700 или bold — жирный шрифт.*/
    font-family: 'Times New Roman', Arial, serif; /*В начале списка располагают самый желаемый шрифт, затем менее желаемый, 
    а в самом конце списка — общий тип шрифта. Браузер проходит по списку слева направо и использует первый найденный в системе 
    или на сайте шрифт. Если название шрифта состоит из нескольких слов, то его нужно заключать в кавычки.*/
    padding: 10px;
    background-color: rgba(245, 218, 237, 0.692);
    color: rgb(7, 21, 21); /*Цвет текста, если вы задаёте блоку фоновое изображение, нужно задавать подходящий фоновый цвет.
    В этом случае, пока изображение загружается, или в случае, если оно совсем не загрузится, текст всё равно можно будет прочитать*/
    line-height: 120%; /* высота строки или межстрочный интервал. По умолчанию это свойство имеет значение normal. 
    Оно указывает браузеру, что межстрочный интервал нужно подобрать автоматически, исходя из размера шрифта. 
    Спецификация рекомендует устанавливать его в пределах 100-120% от размера шрифта.
    можно задать фиксированное абсолютное значение в px.
    или относительное значение, в процентах или в виде множителя*/
}

h1 {color: rgba(241, 6, 33, 0.87);
    font-style: oblique;
    font-size: 2em;
    text-align: center; /*выравнивается текст и другие инлайновые элементы внутри блока по горизонтали.
    left — выравнивание по левому краю блока, это значение по умолчанию;
    right — по правому краю блока;
    center — по центру блока;
    justify — по ширине блока, чтобы занять равномерно всё пространство строки.
    Важно помнить, что свойство text-align применяется именно к самому блоку-контейнеру, внутри которого находится текстовый контент*/
    text-decoration: underline;}

    h2 {
        font: 30px "Roboto", 400;
    }

.image-container {
    background-image: url("img/3.JPG");
    width: 900px;
    height: 400px;
    background-size: contain;
    position: relative;
    margin: 1cm;
    color: rgb(44, 9, 77);
    font-size: 160%;
    font-weight: 600;
    line-height: 120%;
    text-align: center;
    } /*background-size: cover; масштабируется так, чтобы полностью заполнить фон элемента, возможно, обрезая его или contain
     заполнит элемент не обрезая картинку*/  /*проверить*/

img {
    vertical-align: top; /*выравнивать инлайновые элементы относительно содержащей его строки.
     Самый простой пример — выровнять картинку img по вертикали в текстовой строке.
    самые часто используемые:
    top — выравнивание по верхнему краю строки;
    middle — по середине строки;
    bottom — по нижнему краю строки;
    baseline — по базовой линии строки (значение по умолчанию).
    В отличие от text-align свойство vertical-align задаётся самому элементу, а не содержащему его контейнеру*/
}

nav {
    color: blue;
    font-style: oblique;
    text-decoration: underline;
}

article {
    white-space: normal; /*управление пробелами.
    nowrap — схлопывает лишние пробелы и отображает весь текст одной строкой без переносов;
    pre — сохраняет пробелы и переносы как в исходном коде аналогично тегу <pre>;
    pre-wrap — работает как значение pre, но добавляет автоматические переносы, если текст не помещается в контейнер;
    normal — режим по умолчанию: лишние пробелы и переносы строк схлопываются, текст переносится, пробелы в конце строк удаляются.*/
}

span {
    font-style: italic; /*начертание текста. Его основные значения:
    normal — обычное начертание;
    italic — курсивное начертание;
    oblique — наклонное начертание.
    Если задано значение italic, браузер будет пытаться найти в заданном шрифте отдельное курсивное начертание символов. 
    В некоторых шрифтах отдельный курсив предусмотрен.
    Если отдельного курсивного начертания в шрифте не предусмотрено, то браузер сделает текст наклонным */
    text-decoration: blue double underline; /*дополнительное оформление текста. Значения свойства:
    underline — подчёркивание;
    line-through — зачёркивание;
    overline — надчёркивание;
    none — убирает вышеперечисленные эффекты.
    К тексту можно одновременно применить несколько эффектов, если перечислить значения через пробел
solid — сплошная линия;
double — двойная линия;
dotted — точечная линия;
dashed — пунктирная линия;
wavy — волнистая линия.
text-decoration-color — цвет линии.*/
}

code {
    color: rgb(245, 108, 50);
    font-size: 20px;
    font-weight: 600;
}

aside {
    color: rgb(177, 16, 16);
    background-color: bisque;
    text-align: center;
    padding: 1cm; /*внутренние отступы в блоке*/
    margin: 2cm; /*внешние отступы*/
    width: 300px;
    text-transform: uppercase; /*управлять регистром символов: делать буквы строчными (маленькими) или заглавными (большими). 
    lowercase — все строчные;
    uppercase — все заглавные;
    capitalize — каждое слово начинается с большой буквы;
    none — отменяет изменение регистра.*/
}

footer {
    color: blue;
    background-color: rgb(114, 218, 183);
    font-size: 20px;
    text-align: center;
    padding: 20px; 
    margin: 10px;
}